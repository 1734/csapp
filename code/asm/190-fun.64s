	.file	"190-fun.c"
	.text
	.globl	test_fun_a
	.type	test_fun_a, @function
test_fun_a:
	movl	$0, %edx
	movl	$0, %ecx
	jmp	.L2
.L3:
	movl	$1, %eax
	salq	%cl, %rax
	testq	%rdi, %rax
	setne	%al
	movzbl	%al, %eax
	xorq	%rax, %rdx
	addq	$1, %rcx
.L2:
	cmpq	$63, %rcx
	jle	.L3
	movq	%rdx, %rax
	ret
	.size	test_fun_a, .-test_fun_a
	.globl	fun_a
	.type	fun_a, @function
fun_a:
	movl	$0, %eax
	jmp	.L5
.L6:
	xorq	%rdi, %rax
	shrq	%rdi
.L5:
	testq	%rdi, %rdi
	jne	.L6
	andl	$1, %eax
	ret
	.size	fun_a, .-fun_a
	.globl	fun_b
	.type	fun_b, @function
fun_b:
	movl	$64, %edx
	movl	$0, %eax
	jmp	.L8
.L9:
	addq	%rax, %rax
	movq	%rdi, %rcx
	andl	$1, %ecx
	orq	%rcx, %rax
	shrq	%rdi
	subq	$1, %rdx
.L8:
	testq	%rdx, %rdx
	jne	.L9
	ret
	.size	fun_b, .-fun_b
	.globl	test_fun_b
	.type	test_fun_b, @function
test_fun_b:
	movl	$0, %r8d
	movl	$63, %esi
	movl	$0, %eax
	jmp	.L11
.L12:
	addq	$1, %rax
	subq	$1, %rsi
.L11:
	cmpq	$63, %rax
	jg	.L14
	movl	$1, %edx
	movl	%eax, %ecx
	salq	%cl, %rdx
	testq	%rdi, %rdx
	je	.L12
	movl	$1, %edx
	movl	%esi, %ecx
	sall	%cl, %edx
	movslq	%edx, %rdx
	orq	%rdx, %r8
	jmp	.L12
.L14:
	movq	%r8, %rax
	ret
	.size	test_fun_b, .-test_fun_b
	.globl	fun_c
	.type	fun_c, @function
fun_c:
	movl	$0, %eax
	movl	$0, %edx
	jmp	.L16
.L17:
	movq	%rdi, %rcx
	andl	$16843009, %ecx
	addq	%rcx, %rdx
	shrq	%rdi
	addq	$1, %rax
.L16:
	cmpq	$7, %rax
	jle	.L17
	movq	%rdx, %rax
	sarq	$16, %rax
	addq	%rax, %rdx
	movq	%rdx, %rax
	sarq	$8, %rax
	addq	%rdx, %rax
	movzbl	%al, %eax
	ret
	.size	fun_c, .-fun_c
	.globl	test_fun_c
	.type	test_fun_c, @function
test_fun_c:
	movl	$0, %edx
	movl	$0, %ecx
	jmp	.L19
.L20:
	movl	$1, %eax
	sall	%cl, %eax
	cltq
	testq	%rdi, %rax
	setne	%al
	movzbl	%al, %eax
	addq	%rax, %rdx
	addq	$1, %rcx
.L19:
	cmpq	$63, %rcx
	jle	.L20
	movq	%rdx, %rax
	ret
	.size	test_fun_c, .-test_fun_c
	.globl	test_count_p
	.type	test_count_p, @function
test_count_p:
	movl	$0, %edx
	movl	$0, %ecx
	jmp	.L22
.L23:
	movl	$1, %eax
	salq	%cl, %rax
	testq	%rdi, %rax
	setne	%al
	movzbl	%al, %eax
	addq	%rax, %rdx
	addq	$1, %rcx
.L22:
	cmpq	$63, %rcx
	jle	.L23
	movq	%rdx, %rax
	ret
	.size	test_count_p, .-test_count_p
	.globl	count_p
	.type	count_p, @function
count_p:
	movl	$0, %eax
	jmp	.L25
.L26:
	movq	%rdi, %rdx
	shrq	$63, %rdx
	addq	%rdx, %rax
	addq	%rdi, %rdi
.L25:
	testq	%rdi, %rdi
	jne	.L26
	ret
	.size	count_p, .-count_p
	.globl	count_q
	.type	count_q, @function
count_q:
	movabsq	$-9223372036854775808, %rax
	movl	$0, %edx
	jmp	.L28
.L29:
	testq	%rdi, %rax
	setne	%cl
	movzbl	%cl, %ecx
	addq	%rcx, %rdx
	shrq	%rax
.L28:
	testq	%rax, %rax
	jne	.L29
	movq	%rdx, %rax
	ret
	.size	count_q, .-count_q
	.globl	test_count_q
	.type	test_count_q, @function
test_count_q:
	movl	$0, %edx
	movl	$0, %ecx
	jmp	.L31
.L32:
	movl	$1, %eax
	salq	%cl, %rax
	testq	%rdi, %rax
	setne	%al
	movzbl	%al, %eax
	addq	%rax, %rdx
	addq	$1, %rcx
.L31:
	cmpq	$63, %rcx
	jle	.L32
	movq	%rdx, %rax
	ret
	.size	test_count_q, .-test_count_q
	.globl	count_r
	.type	count_r, @function
count_r:
	movl	$1, %eax
	movl	$0, %edx
	jmp	.L34
.L35:
	addq	%rax, %rax
.L34:
	testq	%rax, %rax
	je	.L37
	testq	%rdi, %rax
	je	.L35
	addq	$1, %rdx
	jmp	.L35
.L37:
	movq	%rdx, %rax
	ret
	.size	count_r, .-count_r
	.globl	test_count_r
	.type	test_count_r, @function
test_count_r:
	movl	$0, %edx
	movl	$0, %ecx
	jmp	.L39
.L40:
	movl	$1, %eax
	salq	%cl, %rax
	testq	%rdi, %rax
	setne	%al
	movzbl	%al, %eax
	addq	%rax, %rdx
	addq	$1, %rcx
.L39:
	cmpq	$63, %rcx
	jle	.L40
	movq	%rdx, %rax
	ret
	.size	test_count_r, .-test_count_r
	.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
	.section	.note.GNU-stack,"",@progbits
